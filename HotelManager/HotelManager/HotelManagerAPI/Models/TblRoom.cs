// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace HotelManager.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class TblRoom
    {
        /// <summary>
        /// Initializes a new instance of the TblRoom class.
        /// </summary>
        public TblRoom() { }

        /// <summary>
        /// Initializes a new instance of the TblRoom class.
        /// </summary>
        public TblRoom(string rType, string rStatus, string idRoom = default(string), int? rPrice = default(int?), IList<TblRoombook> tblRoombook = default(IList<TblRoombook>))
        {
            IdRoom = idRoom;
            RType = rType;
            RPrice = rPrice;
            RStatus = rStatus;
            TblRoombook = tblRoombook;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "idRoom")]
        public string IdRoom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rType")]
        public string RType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rPrice")]
        public int? RPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rStatus")]
        public string RStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tbl_roombook")]
        public IList<TblRoombook> TblRoombook { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (RType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RType");
            }
            if (RStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RStatus");
            }
            if (this.IdRoom != null)
            {
                if (this.IdRoom.Length > 5)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "IdRoom", 5);
                }
                if (this.IdRoom.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "IdRoom", 0);
                }
            }
            if (this.RType != null)
            {
                if (this.RType.Length > 25)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "RType", 25);
                }
                if (this.RType.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "RType", 0);
                }
            }
            if (this.RStatus != null)
            {
                if (this.RStatus.Length > 15)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "RStatus", 15);
                }
                if (this.RStatus.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "RStatus", 0);
                }
            }
            if (this.TblRoombook != null)
            {
                foreach (var element in this.TblRoombook)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
